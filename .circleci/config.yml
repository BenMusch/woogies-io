version: 2.1
orbs:
  slack: circleci/slack@3.4.2
jobs:
  build_api_srv:
    environment:
      LEXICON_PATH: /opt/lexica/
      LETTER_DISTRIBUTION_PATH: /opt/liwords/data/letterdistributions/
      TEST_DB_HOST: localhost
      REDIS_URL: redis://localhost:6379
    docker:
      - image: golang:alpine
      - image: circleci/postgres:12.3
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: liwords_test
          POSTGRES_PASSWORD: pass
      - image: circleci/redis:alpine

    working_directory: /opt/liwords
    steps:
      - checkout
      - run:
          name: Install build-base (for tests) and bash (for slack notifier)
          command: apk update && apk upgrade && apk add bash build-base curl

      - run: mv /opt/liwords/data/lexica $LEXICON_PATH
      - run: cd cmd/liwords-api && go build # persist executable to workspace for deploy step
      # Tests must not be run in parallel; postgres issues happen otherwise.
      - run: go test -p 1 ./...
      - slack/status:
          webhook: "${SLACK_WEBHOOK}"

  build_fe:
    working_directory: /opt/liwords
    docker:
      - image: node:alpine
    steps:
      - checkout
      - run: apk add bash curl
      - run: cd liwords-ui && npm install
      - run: cd liwords-ui && npm run test
      - run: cd liwords-ui && npm run build
      - persist_to_workspace:
          root: liwords-ui
          paths:
            - build
      - slack/status:
          webhook: "${SLACK_WEBHOOK}"

  deploy_fe:
    docker:
      - image: amazon/aws-cli
    steps:
      - run: yum install -y tar gzip
      - attach_workspace:
          at: /tmp/liwords-ui
      - run: ls -al /tmp/liwords-ui
      # cache everything except index.html
      - run: cd /tmp/liwords-ui/build && aws s3 sync --cache-control 'max-age=604800' --exclude index.html . s3://woogles-prod-app
      - run: cd /tmp/liwords-ui/build && aws s3 sync --cache-control 'no-cache' . s3://woogles-prod-app
      - slack/status:
          webhook: "${SLACK_WEBHOOK}"

workflows:
  version: 2
  build_app:
    jobs:
      - build_api_srv
      - build_fe
      - deploy_fe:
          requires:
            - build_fe
          filters:
            branches:
              only: master
