// source: api/proto/puzzle_service/puzzle_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var macondo_api_proto_macondo_macondo_pb = require('../../../macondo/api/proto/macondo/macondo_pb.js');
goog.object.extend(proto, macondo_api_proto_macondo_macondo_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var api_proto_ipc_omgwords_pb = require('../../../api/proto/ipc/omgwords_pb.js');
goog.object.extend(proto, api_proto_ipc_omgwords_pb);
goog.exportSymbol('proto.puzzle_service.NextPuzzleIdRequest', null, global);
goog.exportSymbol('proto.puzzle_service.NextPuzzleIdResponse', null, global);
goog.exportSymbol('proto.puzzle_service.PreviousPuzzleRequest', null, global);
goog.exportSymbol('proto.puzzle_service.PreviousPuzzleResponse', null, global);
goog.exportSymbol('proto.puzzle_service.PuzzleRequest', null, global);
goog.exportSymbol('proto.puzzle_service.PuzzleResponse', null, global);
goog.exportSymbol('proto.puzzle_service.PuzzleStatus', null, global);
goog.exportSymbol('proto.puzzle_service.PuzzleVoteRequest', null, global);
goog.exportSymbol('proto.puzzle_service.PuzzleVoteResponse', null, global);
goog.exportSymbol('proto.puzzle_service.StartPuzzleIdRequest', null, global);
goog.exportSymbol('proto.puzzle_service.StartPuzzleIdResponse', null, global);
goog.exportSymbol('proto.puzzle_service.SubmissionRequest', null, global);
goog.exportSymbol('proto.puzzle_service.SubmissionResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.puzzle_service.StartPuzzleIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.puzzle_service.StartPuzzleIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.puzzle_service.StartPuzzleIdRequest.displayName = 'proto.puzzle_service.StartPuzzleIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.puzzle_service.StartPuzzleIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.puzzle_service.StartPuzzleIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.puzzle_service.StartPuzzleIdResponse.displayName = 'proto.puzzle_service.StartPuzzleIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.puzzle_service.NextPuzzleIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.puzzle_service.NextPuzzleIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.puzzle_service.NextPuzzleIdRequest.displayName = 'proto.puzzle_service.NextPuzzleIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.puzzle_service.NextPuzzleIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.puzzle_service.NextPuzzleIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.puzzle_service.NextPuzzleIdResponse.displayName = 'proto.puzzle_service.NextPuzzleIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.puzzle_service.PuzzleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.puzzle_service.PuzzleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.puzzle_service.PuzzleRequest.displayName = 'proto.puzzle_service.PuzzleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.puzzle_service.PuzzleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.puzzle_service.PuzzleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.puzzle_service.PuzzleResponse.displayName = 'proto.puzzle_service.PuzzleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.puzzle_service.SubmissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.puzzle_service.SubmissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.puzzle_service.SubmissionRequest.displayName = 'proto.puzzle_service.SubmissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.puzzle_service.SubmissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.puzzle_service.SubmissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.puzzle_service.SubmissionResponse.displayName = 'proto.puzzle_service.SubmissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.puzzle_service.PreviousPuzzleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.puzzle_service.PreviousPuzzleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.puzzle_service.PreviousPuzzleRequest.displayName = 'proto.puzzle_service.PreviousPuzzleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.puzzle_service.PreviousPuzzleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.puzzle_service.PreviousPuzzleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.puzzle_service.PreviousPuzzleResponse.displayName = 'proto.puzzle_service.PreviousPuzzleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.puzzle_service.PuzzleVoteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.puzzle_service.PuzzleVoteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.puzzle_service.PuzzleVoteRequest.displayName = 'proto.puzzle_service.PuzzleVoteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.puzzle_service.PuzzleVoteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.puzzle_service.PuzzleVoteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.puzzle_service.PuzzleVoteResponse.displayName = 'proto.puzzle_service.PuzzleVoteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.puzzle_service.StartPuzzleIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.puzzle_service.StartPuzzleIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.puzzle_service.StartPuzzleIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.StartPuzzleIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    lexicon: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.puzzle_service.StartPuzzleIdRequest}
 */
proto.puzzle_service.StartPuzzleIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.puzzle_service.StartPuzzleIdRequest;
  return proto.puzzle_service.StartPuzzleIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.puzzle_service.StartPuzzleIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.puzzle_service.StartPuzzleIdRequest}
 */
proto.puzzle_service.StartPuzzleIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLexicon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.puzzle_service.StartPuzzleIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.puzzle_service.StartPuzzleIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.puzzle_service.StartPuzzleIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.StartPuzzleIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLexicon();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string lexicon = 1;
 * @return {string}
 */
proto.puzzle_service.StartPuzzleIdRequest.prototype.getLexicon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.puzzle_service.StartPuzzleIdRequest} returns this
 */
proto.puzzle_service.StartPuzzleIdRequest.prototype.setLexicon = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.puzzle_service.StartPuzzleIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.puzzle_service.StartPuzzleIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.puzzle_service.StartPuzzleIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.StartPuzzleIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    puzzleId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.puzzle_service.StartPuzzleIdResponse}
 */
proto.puzzle_service.StartPuzzleIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.puzzle_service.StartPuzzleIdResponse;
  return proto.puzzle_service.StartPuzzleIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.puzzle_service.StartPuzzleIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.puzzle_service.StartPuzzleIdResponse}
 */
proto.puzzle_service.StartPuzzleIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPuzzleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.puzzle_service.StartPuzzleIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.puzzle_service.StartPuzzleIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.puzzle_service.StartPuzzleIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.StartPuzzleIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPuzzleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string puzzle_id = 1;
 * @return {string}
 */
proto.puzzle_service.StartPuzzleIdResponse.prototype.getPuzzleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.puzzle_service.StartPuzzleIdResponse} returns this
 */
proto.puzzle_service.StartPuzzleIdResponse.prototype.setPuzzleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.puzzle_service.NextPuzzleIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.puzzle_service.NextPuzzleIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.puzzle_service.NextPuzzleIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.NextPuzzleIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    lexicon: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.puzzle_service.NextPuzzleIdRequest}
 */
proto.puzzle_service.NextPuzzleIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.puzzle_service.NextPuzzleIdRequest;
  return proto.puzzle_service.NextPuzzleIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.puzzle_service.NextPuzzleIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.puzzle_service.NextPuzzleIdRequest}
 */
proto.puzzle_service.NextPuzzleIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLexicon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.puzzle_service.NextPuzzleIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.puzzle_service.NextPuzzleIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.puzzle_service.NextPuzzleIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.NextPuzzleIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLexicon();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string lexicon = 1;
 * @return {string}
 */
proto.puzzle_service.NextPuzzleIdRequest.prototype.getLexicon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.puzzle_service.NextPuzzleIdRequest} returns this
 */
proto.puzzle_service.NextPuzzleIdRequest.prototype.setLexicon = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.puzzle_service.NextPuzzleIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.puzzle_service.NextPuzzleIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.puzzle_service.NextPuzzleIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.NextPuzzleIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    puzzleId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.puzzle_service.NextPuzzleIdResponse}
 */
proto.puzzle_service.NextPuzzleIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.puzzle_service.NextPuzzleIdResponse;
  return proto.puzzle_service.NextPuzzleIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.puzzle_service.NextPuzzleIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.puzzle_service.NextPuzzleIdResponse}
 */
proto.puzzle_service.NextPuzzleIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPuzzleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.puzzle_service.NextPuzzleIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.puzzle_service.NextPuzzleIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.puzzle_service.NextPuzzleIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.NextPuzzleIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPuzzleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string puzzle_id = 1;
 * @return {string}
 */
proto.puzzle_service.NextPuzzleIdResponse.prototype.getPuzzleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.puzzle_service.NextPuzzleIdResponse} returns this
 */
proto.puzzle_service.NextPuzzleIdResponse.prototype.setPuzzleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.puzzle_service.PuzzleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.puzzle_service.PuzzleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.puzzle_service.PuzzleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.PuzzleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    puzzleId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.puzzle_service.PuzzleRequest}
 */
proto.puzzle_service.PuzzleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.puzzle_service.PuzzleRequest;
  return proto.puzzle_service.PuzzleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.puzzle_service.PuzzleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.puzzle_service.PuzzleRequest}
 */
proto.puzzle_service.PuzzleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPuzzleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.puzzle_service.PuzzleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.puzzle_service.PuzzleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.puzzle_service.PuzzleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.PuzzleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPuzzleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string puzzle_id = 1;
 * @return {string}
 */
proto.puzzle_service.PuzzleRequest.prototype.getPuzzleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.puzzle_service.PuzzleRequest} returns this
 */
proto.puzzle_service.PuzzleRequest.prototype.setPuzzleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.puzzle_service.PuzzleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.puzzle_service.PuzzleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.puzzle_service.PuzzleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.PuzzleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    history: (f = msg.getHistory()) && macondo_api_proto_macondo_macondo_pb.GameHistory.toObject(includeInstance, f),
    beforeText: jspb.Message.getFieldWithDefault(msg, 2, ""),
    attempts: jspb.Message.getFieldWithDefault(msg, 3, 0),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    firstAttemptTime: (f = msg.getFirstAttemptTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastAttemptTime: (f = msg.getLastAttemptTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.puzzle_service.PuzzleResponse}
 */
proto.puzzle_service.PuzzleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.puzzle_service.PuzzleResponse;
  return proto.puzzle_service.PuzzleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.puzzle_service.PuzzleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.puzzle_service.PuzzleResponse}
 */
proto.puzzle_service.PuzzleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new macondo_api_proto_macondo_macondo_pb.GameHistory;
      reader.readMessage(value,macondo_api_proto_macondo_macondo_pb.GameHistory.deserializeBinaryFromReader);
      msg.setHistory(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeforeText(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAttempts(value);
      break;
    case 4:
      var value = /** @type {!proto.puzzle_service.PuzzleStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFirstAttemptTime(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastAttemptTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.puzzle_service.PuzzleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.puzzle_service.PuzzleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.puzzle_service.PuzzleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.PuzzleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHistory();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      macondo_api_proto_macondo_macondo_pb.GameHistory.serializeBinaryToWriter
    );
  }
  f = message.getBeforeText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAttempts();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getFirstAttemptTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastAttemptTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional macondo.GameHistory history = 1;
 * @return {?proto.macondo.GameHistory}
 */
proto.puzzle_service.PuzzleResponse.prototype.getHistory = function() {
  return /** @type{?proto.macondo.GameHistory} */ (
    jspb.Message.getWrapperField(this, macondo_api_proto_macondo_macondo_pb.GameHistory, 1));
};


/**
 * @param {?proto.macondo.GameHistory|undefined} value
 * @return {!proto.puzzle_service.PuzzleResponse} returns this
*/
proto.puzzle_service.PuzzleResponse.prototype.setHistory = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.puzzle_service.PuzzleResponse} returns this
 */
proto.puzzle_service.PuzzleResponse.prototype.clearHistory = function() {
  return this.setHistory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.puzzle_service.PuzzleResponse.prototype.hasHistory = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string before_text = 2;
 * @return {string}
 */
proto.puzzle_service.PuzzleResponse.prototype.getBeforeText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.puzzle_service.PuzzleResponse} returns this
 */
proto.puzzle_service.PuzzleResponse.prototype.setBeforeText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 attempts = 3;
 * @return {number}
 */
proto.puzzle_service.PuzzleResponse.prototype.getAttempts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.puzzle_service.PuzzleResponse} returns this
 */
proto.puzzle_service.PuzzleResponse.prototype.setAttempts = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional PuzzleStatus status = 4;
 * @return {!proto.puzzle_service.PuzzleStatus}
 */
proto.puzzle_service.PuzzleResponse.prototype.getStatus = function() {
  return /** @type {!proto.puzzle_service.PuzzleStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.puzzle_service.PuzzleStatus} value
 * @return {!proto.puzzle_service.PuzzleResponse} returns this
 */
proto.puzzle_service.PuzzleResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp first_attempt_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.puzzle_service.PuzzleResponse.prototype.getFirstAttemptTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.puzzle_service.PuzzleResponse} returns this
*/
proto.puzzle_service.PuzzleResponse.prototype.setFirstAttemptTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.puzzle_service.PuzzleResponse} returns this
 */
proto.puzzle_service.PuzzleResponse.prototype.clearFirstAttemptTime = function() {
  return this.setFirstAttemptTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.puzzle_service.PuzzleResponse.prototype.hasFirstAttemptTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp last_attempt_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.puzzle_service.PuzzleResponse.prototype.getLastAttemptTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.puzzle_service.PuzzleResponse} returns this
*/
proto.puzzle_service.PuzzleResponse.prototype.setLastAttemptTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.puzzle_service.PuzzleResponse} returns this
 */
proto.puzzle_service.PuzzleResponse.prototype.clearLastAttemptTime = function() {
  return this.setLastAttemptTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.puzzle_service.PuzzleResponse.prototype.hasLastAttemptTime = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.puzzle_service.SubmissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.puzzle_service.SubmissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.puzzle_service.SubmissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.SubmissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    puzzleId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    answer: (f = msg.getAnswer()) && api_proto_ipc_omgwords_pb.ClientGameplayEvent.toObject(includeInstance, f),
    showSolution: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.puzzle_service.SubmissionRequest}
 */
proto.puzzle_service.SubmissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.puzzle_service.SubmissionRequest;
  return proto.puzzle_service.SubmissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.puzzle_service.SubmissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.puzzle_service.SubmissionRequest}
 */
proto.puzzle_service.SubmissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPuzzleId(value);
      break;
    case 2:
      var value = new api_proto_ipc_omgwords_pb.ClientGameplayEvent;
      reader.readMessage(value,api_proto_ipc_omgwords_pb.ClientGameplayEvent.deserializeBinaryFromReader);
      msg.setAnswer(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowSolution(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.puzzle_service.SubmissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.puzzle_service.SubmissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.puzzle_service.SubmissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.SubmissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPuzzleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnswer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_proto_ipc_omgwords_pb.ClientGameplayEvent.serializeBinaryToWriter
    );
  }
  f = message.getShowSolution();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string puzzle_id = 1;
 * @return {string}
 */
proto.puzzle_service.SubmissionRequest.prototype.getPuzzleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.puzzle_service.SubmissionRequest} returns this
 */
proto.puzzle_service.SubmissionRequest.prototype.setPuzzleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ipc.ClientGameplayEvent answer = 2;
 * @return {?proto.ipc.ClientGameplayEvent}
 */
proto.puzzle_service.SubmissionRequest.prototype.getAnswer = function() {
  return /** @type{?proto.ipc.ClientGameplayEvent} */ (
    jspb.Message.getWrapperField(this, api_proto_ipc_omgwords_pb.ClientGameplayEvent, 2));
};


/**
 * @param {?proto.ipc.ClientGameplayEvent|undefined} value
 * @return {!proto.puzzle_service.SubmissionRequest} returns this
*/
proto.puzzle_service.SubmissionRequest.prototype.setAnswer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.puzzle_service.SubmissionRequest} returns this
 */
proto.puzzle_service.SubmissionRequest.prototype.clearAnswer = function() {
  return this.setAnswer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.puzzle_service.SubmissionRequest.prototype.hasAnswer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool show_solution = 3;
 * @return {boolean}
 */
proto.puzzle_service.SubmissionRequest.prototype.getShowSolution = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.puzzle_service.SubmissionRequest} returns this
 */
proto.puzzle_service.SubmissionRequest.prototype.setShowSolution = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.puzzle_service.SubmissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.puzzle_service.SubmissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.puzzle_service.SubmissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.SubmissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    userIsCorrect: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    correctAnswer: (f = msg.getCorrectAnswer()) && macondo_api_proto_macondo_macondo_pb.GameEvent.toObject(includeInstance, f),
    gameId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    turnNumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    afterText: jspb.Message.getFieldWithDefault(msg, 6, ""),
    attempts: jspb.Message.getFieldWithDefault(msg, 7, 0),
    newUserRating: jspb.Message.getFieldWithDefault(msg, 8, 0),
    newPuzzleRating: jspb.Message.getFieldWithDefault(msg, 9, 0),
    firstAttemptTime: (f = msg.getFirstAttemptTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastAttemptTime: (f = msg.getLastAttemptTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.puzzle_service.SubmissionResponse}
 */
proto.puzzle_service.SubmissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.puzzle_service.SubmissionResponse;
  return proto.puzzle_service.SubmissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.puzzle_service.SubmissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.puzzle_service.SubmissionResponse}
 */
proto.puzzle_service.SubmissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserIsCorrect(value);
      break;
    case 2:
      var value = /** @type {!proto.puzzle_service.PuzzleStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = new macondo_api_proto_macondo_macondo_pb.GameEvent;
      reader.readMessage(value,macondo_api_proto_macondo_macondo_pb.GameEvent.deserializeBinaryFromReader);
      msg.setCorrectAnswer(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTurnNumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAfterText(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAttempts(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNewUserRating(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNewPuzzleRating(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFirstAttemptTime(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastAttemptTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.puzzle_service.SubmissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.puzzle_service.SubmissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.puzzle_service.SubmissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.SubmissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserIsCorrect();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCorrectAnswer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      macondo_api_proto_macondo_macondo_pb.GameEvent.serializeBinaryToWriter
    );
  }
  f = message.getGameId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTurnNumber();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getAfterText();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAttempts();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getNewUserRating();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getNewPuzzleRating();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getFirstAttemptTime();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastAttemptTime();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool user_is_correct = 1;
 * @return {boolean}
 */
proto.puzzle_service.SubmissionResponse.prototype.getUserIsCorrect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
 */
proto.puzzle_service.SubmissionResponse.prototype.setUserIsCorrect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional PuzzleStatus status = 2;
 * @return {!proto.puzzle_service.PuzzleStatus}
 */
proto.puzzle_service.SubmissionResponse.prototype.getStatus = function() {
  return /** @type {!proto.puzzle_service.PuzzleStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.puzzle_service.PuzzleStatus} value
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
 */
proto.puzzle_service.SubmissionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional macondo.GameEvent correct_answer = 3;
 * @return {?proto.macondo.GameEvent}
 */
proto.puzzle_service.SubmissionResponse.prototype.getCorrectAnswer = function() {
  return /** @type{?proto.macondo.GameEvent} */ (
    jspb.Message.getWrapperField(this, macondo_api_proto_macondo_macondo_pb.GameEvent, 3));
};


/**
 * @param {?proto.macondo.GameEvent|undefined} value
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
*/
proto.puzzle_service.SubmissionResponse.prototype.setCorrectAnswer = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
 */
proto.puzzle_service.SubmissionResponse.prototype.clearCorrectAnswer = function() {
  return this.setCorrectAnswer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.puzzle_service.SubmissionResponse.prototype.hasCorrectAnswer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string game_id = 4;
 * @return {string}
 */
proto.puzzle_service.SubmissionResponse.prototype.getGameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
 */
proto.puzzle_service.SubmissionResponse.prototype.setGameId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 turn_number = 5;
 * @return {number}
 */
proto.puzzle_service.SubmissionResponse.prototype.getTurnNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
 */
proto.puzzle_service.SubmissionResponse.prototype.setTurnNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string after_text = 6;
 * @return {string}
 */
proto.puzzle_service.SubmissionResponse.prototype.getAfterText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
 */
proto.puzzle_service.SubmissionResponse.prototype.setAfterText = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 attempts = 7;
 * @return {number}
 */
proto.puzzle_service.SubmissionResponse.prototype.getAttempts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
 */
proto.puzzle_service.SubmissionResponse.prototype.setAttempts = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 new_user_rating = 8;
 * @return {number}
 */
proto.puzzle_service.SubmissionResponse.prototype.getNewUserRating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
 */
proto.puzzle_service.SubmissionResponse.prototype.setNewUserRating = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 new_puzzle_rating = 9;
 * @return {number}
 */
proto.puzzle_service.SubmissionResponse.prototype.getNewPuzzleRating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
 */
proto.puzzle_service.SubmissionResponse.prototype.setNewPuzzleRating = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional google.protobuf.Timestamp first_attempt_time = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.puzzle_service.SubmissionResponse.prototype.getFirstAttemptTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
*/
proto.puzzle_service.SubmissionResponse.prototype.setFirstAttemptTime = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
 */
proto.puzzle_service.SubmissionResponse.prototype.clearFirstAttemptTime = function() {
  return this.setFirstAttemptTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.puzzle_service.SubmissionResponse.prototype.hasFirstAttemptTime = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp last_attempt_time = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.puzzle_service.SubmissionResponse.prototype.getLastAttemptTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
*/
proto.puzzle_service.SubmissionResponse.prototype.setLastAttemptTime = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.puzzle_service.SubmissionResponse} returns this
 */
proto.puzzle_service.SubmissionResponse.prototype.clearLastAttemptTime = function() {
  return this.setLastAttemptTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.puzzle_service.SubmissionResponse.prototype.hasLastAttemptTime = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.puzzle_service.PreviousPuzzleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.puzzle_service.PreviousPuzzleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.puzzle_service.PreviousPuzzleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.PreviousPuzzleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    puzzleId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.puzzle_service.PreviousPuzzleRequest}
 */
proto.puzzle_service.PreviousPuzzleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.puzzle_service.PreviousPuzzleRequest;
  return proto.puzzle_service.PreviousPuzzleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.puzzle_service.PreviousPuzzleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.puzzle_service.PreviousPuzzleRequest}
 */
proto.puzzle_service.PreviousPuzzleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPuzzleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.puzzle_service.PreviousPuzzleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.puzzle_service.PreviousPuzzleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.puzzle_service.PreviousPuzzleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.PreviousPuzzleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPuzzleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string puzzle_id = 1;
 * @return {string}
 */
proto.puzzle_service.PreviousPuzzleRequest.prototype.getPuzzleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.puzzle_service.PreviousPuzzleRequest} returns this
 */
proto.puzzle_service.PreviousPuzzleRequest.prototype.setPuzzleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.puzzle_service.PreviousPuzzleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.puzzle_service.PreviousPuzzleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.puzzle_service.PreviousPuzzleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.PreviousPuzzleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    puzzleId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.puzzle_service.PreviousPuzzleResponse}
 */
proto.puzzle_service.PreviousPuzzleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.puzzle_service.PreviousPuzzleResponse;
  return proto.puzzle_service.PreviousPuzzleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.puzzle_service.PreviousPuzzleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.puzzle_service.PreviousPuzzleResponse}
 */
proto.puzzle_service.PreviousPuzzleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPuzzleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.puzzle_service.PreviousPuzzleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.puzzle_service.PreviousPuzzleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.puzzle_service.PreviousPuzzleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.PreviousPuzzleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPuzzleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string puzzle_id = 1;
 * @return {string}
 */
proto.puzzle_service.PreviousPuzzleResponse.prototype.getPuzzleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.puzzle_service.PreviousPuzzleResponse} returns this
 */
proto.puzzle_service.PreviousPuzzleResponse.prototype.setPuzzleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.puzzle_service.PuzzleVoteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.puzzle_service.PuzzleVoteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.puzzle_service.PuzzleVoteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.PuzzleVoteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    puzzleId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vote: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.puzzle_service.PuzzleVoteRequest}
 */
proto.puzzle_service.PuzzleVoteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.puzzle_service.PuzzleVoteRequest;
  return proto.puzzle_service.PuzzleVoteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.puzzle_service.PuzzleVoteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.puzzle_service.PuzzleVoteRequest}
 */
proto.puzzle_service.PuzzleVoteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPuzzleId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.puzzle_service.PuzzleVoteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.puzzle_service.PuzzleVoteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.puzzle_service.PuzzleVoteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.PuzzleVoteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPuzzleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVote();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string puzzle_id = 1;
 * @return {string}
 */
proto.puzzle_service.PuzzleVoteRequest.prototype.getPuzzleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.puzzle_service.PuzzleVoteRequest} returns this
 */
proto.puzzle_service.PuzzleVoteRequest.prototype.setPuzzleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 vote = 2;
 * @return {number}
 */
proto.puzzle_service.PuzzleVoteRequest.prototype.getVote = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.puzzle_service.PuzzleVoteRequest} returns this
 */
proto.puzzle_service.PuzzleVoteRequest.prototype.setVote = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.puzzle_service.PuzzleVoteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.puzzle_service.PuzzleVoteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.puzzle_service.PuzzleVoteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.PuzzleVoteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.puzzle_service.PuzzleVoteResponse}
 */
proto.puzzle_service.PuzzleVoteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.puzzle_service.PuzzleVoteResponse;
  return proto.puzzle_service.PuzzleVoteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.puzzle_service.PuzzleVoteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.puzzle_service.PuzzleVoteResponse}
 */
proto.puzzle_service.PuzzleVoteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.puzzle_service.PuzzleVoteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.puzzle_service.PuzzleVoteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.puzzle_service.PuzzleVoteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.puzzle_service.PuzzleVoteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.puzzle_service.PuzzleStatus = {
  UNANSWERED: 0,
  CORRECT: 1,
  INCORRECT: 2
};

goog.object.extend(exports, proto.puzzle_service);
