// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: api/proto/puzzle_service/puzzle_service.proto

package puzzle_service

import (
	macondo "github.com/domino14/macondo/gen/api/proto/macondo"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RandomUnansweredPuzzleIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RandomUnansweredPuzzleIdRequest) Reset() {
	*x = RandomUnansweredPuzzleIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandomUnansweredPuzzleIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomUnansweredPuzzleIdRequest) ProtoMessage() {}

func (x *RandomUnansweredPuzzleIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomUnansweredPuzzleIdRequest.ProtoReflect.Descriptor instead.
func (*RandomUnansweredPuzzleIdRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{0}
}

type RandomUnansweredPuzzleIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PuzzleId string `protobuf:"bytes,1,opt,name=puzzle_id,json=puzzleId,proto3" json:"puzzle_id,omitempty"`
}

func (x *RandomUnansweredPuzzleIdResponse) Reset() {
	*x = RandomUnansweredPuzzleIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandomUnansweredPuzzleIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomUnansweredPuzzleIdResponse) ProtoMessage() {}

func (x *RandomUnansweredPuzzleIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomUnansweredPuzzleIdResponse.ProtoReflect.Descriptor instead.
func (*RandomUnansweredPuzzleIdResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{1}
}

func (x *RandomUnansweredPuzzleIdResponse) GetPuzzleId() string {
	if x != nil {
		return x.PuzzleId
	}
	return ""
}

type PuzzleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PuzzleId string `protobuf:"bytes,1,opt,name=puzzle_id,json=puzzleId,proto3" json:"puzzle_id,omitempty"`
}

func (x *PuzzleRequest) Reset() {
	*x = PuzzleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuzzleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuzzleRequest) ProtoMessage() {}

func (x *PuzzleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuzzleRequest.ProtoReflect.Descriptor instead.
func (*PuzzleRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{2}
}

func (x *PuzzleRequest) GetPuzzleId() string {
	if x != nil {
		return x.PuzzleId
	}
	return ""
}

type PuzzleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId     string               `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	History    *macondo.GameHistory `protobuf:"bytes,2,opt,name=history,proto3" json:"history,omitempty"`
	BeforeText string               `protobuf:"bytes,3,opt,name=before_text,json=beforeText,proto3" json:"before_text,omitempty"`
	Attempts   int32                `protobuf:"varint,4,opt,name=attempts,proto3" json:"attempts,omitempty"`
}

func (x *PuzzleResponse) Reset() {
	*x = PuzzleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuzzleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuzzleResponse) ProtoMessage() {}

func (x *PuzzleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuzzleResponse.ProtoReflect.Descriptor instead.
func (*PuzzleResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{3}
}

func (x *PuzzleResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *PuzzleResponse) GetHistory() *macondo.GameHistory {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *PuzzleResponse) GetBeforeText() string {
	if x != nil {
		return x.BeforeText
	}
	return ""
}

func (x *PuzzleResponse) GetAttempts() int32 {
	if x != nil {
		return x.Attempts
	}
	return 0
}

type SubmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PuzzleId string             `protobuf:"bytes,1,opt,name=puzzle_id,json=puzzleId,proto3" json:"puzzle_id,omitempty"`
	Answer   *macondo.GameEvent `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *SubmissionRequest) Reset() {
	*x = SubmissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionRequest) ProtoMessage() {}

func (x *SubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionRequest.ProtoReflect.Descriptor instead.
func (*SubmissionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{4}
}

func (x *SubmissionRequest) GetPuzzleId() string {
	if x != nil {
		return x.PuzzleId
	}
	return ""
}

func (x *SubmissionRequest) GetAnswer() *macondo.GameEvent {
	if x != nil {
		return x.Answer
	}
	return nil
}

type SubmissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Correct       bool               `protobuf:"varint,1,opt,name=correct,proto3" json:"correct,omitempty"`
	CorrectAnswer *macondo.GameEvent `protobuf:"bytes,2,opt,name=correct_answer,json=correctAnswer,proto3" json:"correct_answer,omitempty"`
	AfterText     string             `protobuf:"bytes,3,opt,name=after_text,json=afterText,proto3" json:"after_text,omitempty"`
	Attempts      int32              `protobuf:"varint,4,opt,name=attempts,proto3" json:"attempts,omitempty"`
}

func (x *SubmissionResponse) Reset() {
	*x = SubmissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionResponse) ProtoMessage() {}

func (x *SubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionResponse.ProtoReflect.Descriptor instead.
func (*SubmissionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{5}
}

func (x *SubmissionResponse) GetCorrect() bool {
	if x != nil {
		return x.Correct
	}
	return false
}

func (x *SubmissionResponse) GetCorrectAnswer() *macondo.GameEvent {
	if x != nil {
		return x.CorrectAnswer
	}
	return nil
}

func (x *SubmissionResponse) GetAfterText() string {
	if x != nil {
		return x.AfterText
	}
	return ""
}

func (x *SubmissionResponse) GetAttempts() int32 {
	if x != nil {
		return x.Attempts
	}
	return 0
}

type PuzzleVoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PuzzleId string `protobuf:"bytes,1,opt,name=puzzle_id,json=puzzleId,proto3" json:"puzzle_id,omitempty"`
	Vote     int32  `protobuf:"varint,2,opt,name=vote,proto3" json:"vote,omitempty"`
}

func (x *PuzzleVoteRequest) Reset() {
	*x = PuzzleVoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuzzleVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuzzleVoteRequest) ProtoMessage() {}

func (x *PuzzleVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuzzleVoteRequest.ProtoReflect.Descriptor instead.
func (*PuzzleVoteRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{6}
}

func (x *PuzzleVoteRequest) GetPuzzleId() string {
	if x != nil {
		return x.PuzzleId
	}
	return ""
}

func (x *PuzzleVoteRequest) GetVote() int32 {
	if x != nil {
		return x.Vote
	}
	return 0
}

type PuzzleVoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PuzzleVoteResponse) Reset() {
	*x = PuzzleVoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PuzzleVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuzzleVoteResponse) ProtoMessage() {}

func (x *PuzzleVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuzzleVoteResponse.ProtoReflect.Descriptor instead.
func (*PuzzleVoteResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{7}
}

var File_api_proto_puzzle_service_puzzle_service_proto protoreflect.FileDescriptor

var file_api_proto_puzzle_service_puzzle_service_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x75, 0x7a, 0x7a,
	0x6c, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x75, 0x7a, 0x7a, 0x6c,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x27, 0x6d,
	0x61, 0x63, 0x6f, 0x6e, 0x64, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6d, 0x61, 0x63, 0x6f, 0x6e, 0x64, 0x6f, 0x2f, 0x6d, 0x61, 0x63, 0x6f, 0x6e, 0x64, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x1f, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x55, 0x6e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x50, 0x75, 0x7a, 0x7a, 0x6c, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x20, 0x52, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x55, 0x6e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x50, 0x75, 0x7a,
	0x7a, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0d, 0x50, 0x75,
	0x7a, 0x7a, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x0e, 0x50, 0x75, 0x7a,
	0x7a, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x63, 0x6f, 0x6e, 0x64, 0x6f, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x73, 0x22, 0x5c, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x7a, 0x7a, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x7a, 0x7a, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x63, 0x6f, 0x6e, 0x64, 0x6f, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22,
	0xa4, 0x01, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74,
	0x12, 0x39, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x63, 0x6f, 0x6e,
	0x64, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x22, 0x44, 0x0a, 0x11, 0x50, 0x75, 0x7a, 0x7a, 0x6c, 0x65,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x22, 0x14, 0x0a, 0x12,
	0x50, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x84, 0x03, 0x0a, 0x0d, 0x50, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x55, 0x6e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x50, 0x75, 0x7a, 0x7a,
	0x6c, 0x65, 0x49, 0x64, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x55, 0x6e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x50, 0x75, 0x7a, 0x7a, 0x6c,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x55, 0x6e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x50, 0x75, 0x7a, 0x7a, 0x6c, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x12, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x50, 0x75, 0x7a, 0x7a,
	0x6c, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x31, 0x34,
	0x2f, 0x6c, 0x69, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_puzzle_service_puzzle_service_proto_rawDescOnce sync.Once
	file_api_proto_puzzle_service_puzzle_service_proto_rawDescData = file_api_proto_puzzle_service_puzzle_service_proto_rawDesc
)

func file_api_proto_puzzle_service_puzzle_service_proto_rawDescGZIP() []byte {
	file_api_proto_puzzle_service_puzzle_service_proto_rawDescOnce.Do(func() {
		file_api_proto_puzzle_service_puzzle_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_puzzle_service_puzzle_service_proto_rawDescData)
	})
	return file_api_proto_puzzle_service_puzzle_service_proto_rawDescData
}

var file_api_proto_puzzle_service_puzzle_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_proto_puzzle_service_puzzle_service_proto_goTypes = []interface{}{
	(*RandomUnansweredPuzzleIdRequest)(nil),  // 0: game_service.RandomUnansweredPuzzleIdRequest
	(*RandomUnansweredPuzzleIdResponse)(nil), // 1: game_service.RandomUnansweredPuzzleIdResponse
	(*PuzzleRequest)(nil),                    // 2: game_service.PuzzleRequest
	(*PuzzleResponse)(nil),                   // 3: game_service.PuzzleResponse
	(*SubmissionRequest)(nil),                // 4: game_service.SubmissionRequest
	(*SubmissionResponse)(nil),               // 5: game_service.SubmissionResponse
	(*PuzzleVoteRequest)(nil),                // 6: game_service.PuzzleVoteRequest
	(*PuzzleVoteResponse)(nil),               // 7: game_service.PuzzleVoteResponse
	(*macondo.GameHistory)(nil),              // 8: macondo.GameHistory
	(*macondo.GameEvent)(nil),                // 9: macondo.GameEvent
}
var file_api_proto_puzzle_service_puzzle_service_proto_depIdxs = []int32{
	8, // 0: game_service.PuzzleResponse.history:type_name -> macondo.GameHistory
	9, // 1: game_service.SubmissionRequest.answer:type_name -> macondo.GameEvent
	9, // 2: game_service.SubmissionResponse.correct_answer:type_name -> macondo.GameEvent
	0, // 3: game_service.PuzzleService.GetRandomUnansweredPuzzleIdForUser:input_type -> game_service.RandomUnansweredPuzzleIdRequest
	2, // 4: game_service.PuzzleService.GetPuzzle:input_type -> game_service.PuzzleRequest
	4, // 5: game_service.PuzzleService.SubmitAnswer:input_type -> game_service.SubmissionRequest
	6, // 6: game_service.PuzzleService.SetPuzzleVote:input_type -> game_service.PuzzleVoteRequest
	1, // 7: game_service.PuzzleService.GetRandomUnansweredPuzzleIdForUser:output_type -> game_service.RandomUnansweredPuzzleIdResponse
	3, // 8: game_service.PuzzleService.GetPuzzle:output_type -> game_service.PuzzleResponse
	5, // 9: game_service.PuzzleService.SubmitAnswer:output_type -> game_service.SubmissionResponse
	7, // 10: game_service.PuzzleService.SetPuzzleVote:output_type -> game_service.PuzzleVoteResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_proto_puzzle_service_puzzle_service_proto_init() }
func file_api_proto_puzzle_service_puzzle_service_proto_init() {
	if File_api_proto_puzzle_service_puzzle_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandomUnansweredPuzzleIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandomUnansweredPuzzleIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuzzleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuzzleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuzzleVoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_puzzle_service_puzzle_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PuzzleVoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_puzzle_service_puzzle_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_puzzle_service_puzzle_service_proto_goTypes,
		DependencyIndexes: file_api_proto_puzzle_service_puzzle_service_proto_depIdxs,
		MessageInfos:      file_api_proto_puzzle_service_puzzle_service_proto_msgTypes,
	}.Build()
	File_api_proto_puzzle_service_puzzle_service_proto = out.File
	file_api_proto_puzzle_service_puzzle_service_proto_rawDesc = nil
	file_api_proto_puzzle_service_puzzle_service_proto_goTypes = nil
	file_api_proto_puzzle_service_puzzle_service_proto_depIdxs = nil
}
