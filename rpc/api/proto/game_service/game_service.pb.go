// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: game_service/game_service.proto

package game_service

import (
	ipc "github.com/domino14/liwords/rpc/api/proto/ipc"
	macondo "github.com/domino14/macondo/gen/api/proto/macondo"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Meta information about a game, including its players.
type GameInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GameInfoRequest) Reset() {
	*x = GameInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameInfoRequest) ProtoMessage() {}

func (x *GameInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameInfoRequest.ProtoReflect.Descriptor instead.
func (*GameInfoRequest) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{0}
}

func (x *GameInfoRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GCGRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GCGRequest) Reset() {
	*x = GCGRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCGRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCGRequest) ProtoMessage() {}

func (x *GCGRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCGRequest.ProtoReflect.Descriptor instead.
func (*GCGRequest) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{1}
}

func (x *GCGRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GameHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GameHistoryRequest) Reset() {
	*x = GameHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameHistoryRequest) ProtoMessage() {}

func (x *GameHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameHistoryRequest.ProtoReflect.Descriptor instead.
func (*GameHistoryRequest) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{2}
}

func (x *GameHistoryRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GameDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GameDocumentRequest) Reset() {
	*x = GameDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDocumentRequest) ProtoMessage() {}

func (x *GameDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDocumentRequest.ProtoReflect.Descriptor instead.
func (*GameDocumentRequest) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{3}
}

func (x *GameDocumentRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GCGResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gcg string `protobuf:"bytes,1,opt,name=gcg,proto3" json:"gcg,omitempty"`
}

func (x *GCGResponse) Reset() {
	*x = GCGResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCGResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCGResponse) ProtoMessage() {}

func (x *GCGResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCGResponse.ProtoReflect.Descriptor instead.
func (*GCGResponse) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{4}
}

func (x *GCGResponse) GetGcg() string {
	if x != nil {
		return x.Gcg
	}
	return ""
}

type GameHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	History *macondo.GameHistory `protobuf:"bytes,1,opt,name=history,proto3" json:"history,omitempty"`
}

func (x *GameHistoryResponse) Reset() {
	*x = GameHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameHistoryResponse) ProtoMessage() {}

func (x *GameHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameHistoryResponse.ProtoReflect.Descriptor instead.
func (*GameHistoryResponse) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{5}
}

func (x *GameHistoryResponse) GetHistory() *macondo.GameHistory {
	if x != nil {
		return x.History
	}
	return nil
}

type GameDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Document *ipc.GameDocument `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
}

func (x *GameDocumentResponse) Reset() {
	*x = GameDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDocumentResponse) ProtoMessage() {}

func (x *GameDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDocumentResponse.ProtoReflect.Descriptor instead.
func (*GameDocumentResponse) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{6}
}

func (x *GameDocumentResponse) GetDocument() *ipc.GameDocument {
	if x != nil {
		return x.Document
	}
	return nil
}

type RecentGamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	NumGames int32  `protobuf:"varint,2,opt,name=num_games,json=numGames,proto3" json:"num_games,omitempty"`
	Offset   int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *RecentGamesRequest) Reset() {
	*x = RecentGamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecentGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentGamesRequest) ProtoMessage() {}

func (x *RecentGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecentGamesRequest.ProtoReflect.Descriptor instead.
func (*RecentGamesRequest) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{7}
}

func (x *RecentGamesRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RecentGamesRequest) GetNumGames() int32 {
	if x != nil {
		return x.NumGames
	}
	return 0
}

func (x *RecentGamesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type StreakInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Streak      []*StreakInfoResponse_SingleGameInfo `protobuf:"bytes,1,rep,name=streak,proto3" json:"streak,omitempty"`
	PlayersInfo []*StreakInfoResponse_PlayerInfo     `protobuf:"bytes,3,rep,name=playersInfo,proto3" json:"playersInfo,omitempty"`
}

func (x *StreakInfoResponse) Reset() {
	*x = StreakInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreakInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreakInfoResponse) ProtoMessage() {}

func (x *StreakInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreakInfoResponse.ProtoReflect.Descriptor instead.
func (*StreakInfoResponse) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{8}
}

func (x *StreakInfoResponse) GetStreak() []*StreakInfoResponse_SingleGameInfo {
	if x != nil {
		return x.Streak
	}
	return nil
}

func (x *StreakInfoResponse) GetPlayersInfo() []*StreakInfoResponse_PlayerInfo {
	if x != nil {
		return x.PlayersInfo
	}
	return nil
}

type RematchStreakRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalRequestId string `protobuf:"bytes,1,opt,name=original_request_id,json=originalRequestId,proto3" json:"original_request_id,omitempty"`
}

func (x *RematchStreakRequest) Reset() {
	*x = RematchStreakRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RematchStreakRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RematchStreakRequest) ProtoMessage() {}

func (x *RematchStreakRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RematchStreakRequest.ProtoReflect.Descriptor instead.
func (*RematchStreakRequest) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{9}
}

func (x *RematchStreakRequest) GetOriginalRequestId() string {
	if x != nil {
		return x.OriginalRequestId
	}
	return ""
}

// GameEventResponse doesn't need to have any extra data. The GameEvent API
// will still use sockets to broadcast game information.
type GameEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameEventResponse) Reset() {
	*x = GameEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEventResponse) ProtoMessage() {}

func (x *GameEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEventResponse.ProtoReflect.Descriptor instead.
func (*GameEventResponse) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{10}
}

type TimePenaltyEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PointsLost int32 `protobuf:"varint,1,opt,name=points_lost,json=pointsLost,proto3" json:"points_lost,omitempty"`
}

func (x *TimePenaltyEvent) Reset() {
	*x = TimePenaltyEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimePenaltyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimePenaltyEvent) ProtoMessage() {}

func (x *TimePenaltyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimePenaltyEvent.ProtoReflect.Descriptor instead.
func (*TimePenaltyEvent) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{11}
}

func (x *TimePenaltyEvent) GetPointsLost() int32 {
	if x != nil {
		return x.PointsLost
	}
	return 0
}

type ChallengeBonusPointsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PointsGained int32 `protobuf:"varint,1,opt,name=points_gained,json=pointsGained,proto3" json:"points_gained,omitempty"`
}

func (x *ChallengeBonusPointsEvent) Reset() {
	*x = ChallengeBonusPointsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeBonusPointsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeBonusPointsEvent) ProtoMessage() {}

func (x *ChallengeBonusPointsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeBonusPointsEvent.ProtoReflect.Descriptor instead.
func (*ChallengeBonusPointsEvent) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{12}
}

func (x *ChallengeBonusPointsEvent) GetPointsGained() int32 {
	if x != nil {
		return x.PointsGained
	}
	return 0
}

type CreateBroadcastGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayersInfo   []*CreateBroadcastGameRequest_PlayerInfo `protobuf:"bytes,1,rep,name=playersInfo,proto3" json:"playersInfo,omitempty"`
	Lexicon       string                                   `protobuf:"bytes,2,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	Rules         *ipc.GameRules                           `protobuf:"bytes,3,opt,name=rules,proto3" json:"rules,omitempty"`
	ChallengeRule macondo.ChallengeRule                    `protobuf:"varint,4,opt,name=challenge_rule,json=challengeRule,proto3,enum=macondo.ChallengeRule" json:"challenge_rule,omitempty"`
	// public will make this game public upon creation - i.e., findable
	// within the interface. Otherwise, a game ID is required.
	Public bool `protobuf:"varint,5,opt,name=public,proto3" json:"public,omitempty"`
}

func (x *CreateBroadcastGameRequest) Reset() {
	*x = CreateBroadcastGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBroadcastGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBroadcastGameRequest) ProtoMessage() {}

func (x *CreateBroadcastGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBroadcastGameRequest.ProtoReflect.Descriptor instead.
func (*CreateBroadcastGameRequest) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{13}
}

func (x *CreateBroadcastGameRequest) GetPlayersInfo() []*CreateBroadcastGameRequest_PlayerInfo {
	if x != nil {
		return x.PlayersInfo
	}
	return nil
}

func (x *CreateBroadcastGameRequest) GetLexicon() string {
	if x != nil {
		return x.Lexicon
	}
	return ""
}

func (x *CreateBroadcastGameRequest) GetRules() *ipc.GameRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *CreateBroadcastGameRequest) GetChallengeRule() macondo.ChallengeRule {
	if x != nil {
		return x.ChallengeRule
	}
	return macondo.ChallengeRule_VOID
}

func (x *CreateBroadcastGameRequest) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

type CreateBroadcastGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *CreateBroadcastGameResponse) Reset() {
	*x = CreateBroadcastGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBroadcastGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBroadcastGameResponse) ProtoMessage() {}

func (x *CreateBroadcastGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBroadcastGameResponse.ProtoReflect.Descriptor instead.
func (*CreateBroadcastGameResponse) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateBroadcastGameResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type BroadcastGamePrivacy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Public bool `protobuf:"varint,1,opt,name=public,proto3" json:"public,omitempty"`
}

func (x *BroadcastGamePrivacy) Reset() {
	*x = BroadcastGamePrivacy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastGamePrivacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastGamePrivacy) ProtoMessage() {}

func (x *BroadcastGamePrivacy) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastGamePrivacy.ProtoReflect.Descriptor instead.
func (*BroadcastGamePrivacy) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{15}
}

func (x *BroadcastGamePrivacy) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

type StreakInfoResponse_SingleGameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Winner int32  `protobuf:"varint,3,opt,name=winner,proto3" json:"winner,omitempty"` // the index in `players` or -1 if no winner (tie)
}

func (x *StreakInfoResponse_SingleGameInfo) Reset() {
	*x = StreakInfoResponse_SingleGameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreakInfoResponse_SingleGameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreakInfoResponse_SingleGameInfo) ProtoMessage() {}

func (x *StreakInfoResponse_SingleGameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreakInfoResponse_SingleGameInfo.ProtoReflect.Descriptor instead.
func (*StreakInfoResponse_SingleGameInfo) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *StreakInfoResponse_SingleGameInfo) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *StreakInfoResponse_SingleGameInfo) GetWinner() int32 {
	if x != nil {
		return x.Winner
	}
	return 0
}

type StreakInfoResponse_PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Uuid     string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"` // player uuid needed for censoring
}

func (x *StreakInfoResponse_PlayerInfo) Reset() {
	*x = StreakInfoResponse_PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreakInfoResponse_PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreakInfoResponse_PlayerInfo) ProtoMessage() {}

func (x *StreakInfoResponse_PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreakInfoResponse_PlayerInfo.ProtoReflect.Descriptor instead.
func (*StreakInfoResponse_PlayerInfo) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{8, 1}
}

func (x *StreakInfoResponse_PlayerInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *StreakInfoResponse_PlayerInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// PlayerInfo for broadcast games do not need to be tied to a Woogles
// UUID. These games are meant for sandbox/annotation/broadcast of
// a typically IRL game.
type CreateBroadcastGameRequest_PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	RealName string `protobuf:"bytes,2,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
}

func (x *CreateBroadcastGameRequest_PlayerInfo) Reset() {
	*x = CreateBroadcastGameRequest_PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_service_game_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBroadcastGameRequest_PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBroadcastGameRequest_PlayerInfo) ProtoMessage() {}

func (x *CreateBroadcastGameRequest_PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_service_game_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBroadcastGameRequest_PlayerInfo.ProtoReflect.Descriptor instead.
func (*CreateBroadcastGameRequest_PlayerInfo) Descriptor() ([]byte, []int) {
	return file_game_service_game_service_proto_rawDescGZIP(), []int{13, 0}
}

func (x *CreateBroadcastGameRequest_PlayerInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CreateBroadcastGameRequest_PlayerInfo) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

var File_game_service_game_service_proto protoreflect.FileDescriptor

var file_game_service_game_service_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a,
	0x12, 0x69, 0x70, 0x63, 0x2f, 0x6f, 0x6d, 0x67, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x61, 0x63, 0x6f, 0x6e, 0x64, 0x6f, 0x2f, 0x6d, 0x61, 0x63,
	0x6f, 0x6e, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2a, 0x0a, 0x0f, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x0a, 0x47, 0x43, 0x47, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x2d, 0x0a,
	0x12, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x13,
	0x47, 0x61, 0x6d, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x1f, 0x0a, 0x0b,
	0x47, 0x43, 0x47, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67,
	0x63, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x63, 0x67, 0x22, 0x45, 0x0a,
	0x13, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x63, 0x6f, 0x6e, 0x64, 0x6f, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x22, 0x45, 0x0a, 0x14, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x69, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x12, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6e, 0x75, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x22, 0xad, 0x02, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6b, 0x12, 0x4d, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x41, 0x0a, 0x0e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x3c, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x46, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x61,
	0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x33, 0x0a, 0x10, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x6c, 0x6f,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x4c, 0x6f, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x67, 0x61, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x47, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x22, 0xd1, 0x02, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x6c, 0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0e,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x63, 0x6f, 0x6e, 0x64, 0x6f, 0x2e, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x1a, 0x45, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x1b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x22, 0x2e, 0x0a, 0x14, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x32, 0xf0, 0x03, 0x0a, 0x13, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x47, 0x43, 0x47, 0x12, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x43, 0x47, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x43, 0x47, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x69, 0x70, 0x63, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x73, 0x12, 0x58, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x22, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xe8, 0x03, 0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x61,
	0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65,
	0x6e, 0x61, 0x6c, 0x74, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65,
	0x6e, 0x61, 0x6c, 0x74, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x17, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a,
	0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5e, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x22, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x1a,
	0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x31, 0x34, 0x2f, 0x6c, 0x69, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x2f,
	0x72, 0x70, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_game_service_game_service_proto_rawDescOnce sync.Once
	file_game_service_game_service_proto_rawDescData = file_game_service_game_service_proto_rawDesc
)

func file_game_service_game_service_proto_rawDescGZIP() []byte {
	file_game_service_game_service_proto_rawDescOnce.Do(func() {
		file_game_service_game_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_service_game_service_proto_rawDescData)
	})
	return file_game_service_game_service_proto_rawDescData
}

var file_game_service_game_service_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_game_service_game_service_proto_goTypes = []interface{}{
	(*GameInfoRequest)(nil),                       // 0: game_service.GameInfoRequest
	(*GCGRequest)(nil),                            // 1: game_service.GCGRequest
	(*GameHistoryRequest)(nil),                    // 2: game_service.GameHistoryRequest
	(*GameDocumentRequest)(nil),                   // 3: game_service.GameDocumentRequest
	(*GCGResponse)(nil),                           // 4: game_service.GCGResponse
	(*GameHistoryResponse)(nil),                   // 5: game_service.GameHistoryResponse
	(*GameDocumentResponse)(nil),                  // 6: game_service.GameDocumentResponse
	(*RecentGamesRequest)(nil),                    // 7: game_service.RecentGamesRequest
	(*StreakInfoResponse)(nil),                    // 8: game_service.StreakInfoResponse
	(*RematchStreakRequest)(nil),                  // 9: game_service.RematchStreakRequest
	(*GameEventResponse)(nil),                     // 10: game_service.GameEventResponse
	(*TimePenaltyEvent)(nil),                      // 11: game_service.TimePenaltyEvent
	(*ChallengeBonusPointsEvent)(nil),             // 12: game_service.ChallengeBonusPointsEvent
	(*CreateBroadcastGameRequest)(nil),            // 13: game_service.CreateBroadcastGameRequest
	(*CreateBroadcastGameResponse)(nil),           // 14: game_service.CreateBroadcastGameResponse
	(*BroadcastGamePrivacy)(nil),                  // 15: game_service.BroadcastGamePrivacy
	(*StreakInfoResponse_SingleGameInfo)(nil),     // 16: game_service.StreakInfoResponse.SingleGameInfo
	(*StreakInfoResponse_PlayerInfo)(nil),         // 17: game_service.StreakInfoResponse.PlayerInfo
	(*CreateBroadcastGameRequest_PlayerInfo)(nil), // 18: game_service.CreateBroadcastGameRequest.PlayerInfo
	(*macondo.GameHistory)(nil),                   // 19: macondo.GameHistory
	(*ipc.GameDocument)(nil),                      // 20: ipc.GameDocument
	(*ipc.GameRules)(nil),                         // 21: ipc.GameRules
	(macondo.ChallengeRule)(0),                    // 22: macondo.ChallengeRule
	(*ipc.ClientGameplayEvent)(nil),               // 23: ipc.ClientGameplayEvent
	(*ipc.GameInfoResponse)(nil),                  // 24: ipc.GameInfoResponse
	(*ipc.GameInfoResponses)(nil),                 // 25: ipc.GameInfoResponses
}
var file_game_service_game_service_proto_depIdxs = []int32{
	19, // 0: game_service.GameHistoryResponse.history:type_name -> macondo.GameHistory
	20, // 1: game_service.GameDocumentResponse.document:type_name -> ipc.GameDocument
	16, // 2: game_service.StreakInfoResponse.streak:type_name -> game_service.StreakInfoResponse.SingleGameInfo
	17, // 3: game_service.StreakInfoResponse.playersInfo:type_name -> game_service.StreakInfoResponse.PlayerInfo
	18, // 4: game_service.CreateBroadcastGameRequest.playersInfo:type_name -> game_service.CreateBroadcastGameRequest.PlayerInfo
	21, // 5: game_service.CreateBroadcastGameRequest.rules:type_name -> ipc.GameRules
	22, // 6: game_service.CreateBroadcastGameRequest.challenge_rule:type_name -> macondo.ChallengeRule
	0,  // 7: game_service.GameMetadataService.GetMetadata:input_type -> game_service.GameInfoRequest
	1,  // 8: game_service.GameMetadataService.GetGCG:input_type -> game_service.GCGRequest
	2,  // 9: game_service.GameMetadataService.GetGameHistory:input_type -> game_service.GameHistoryRequest
	7,  // 10: game_service.GameMetadataService.GetRecentGames:input_type -> game_service.RecentGamesRequest
	9,  // 11: game_service.GameMetadataService.GetRematchStreak:input_type -> game_service.RematchStreakRequest
	3,  // 12: game_service.GameMetadataService.GetGameDocument:input_type -> game_service.GameDocumentRequest
	13, // 13: game_service.GameEventService.CreateBroadcastGame:input_type -> game_service.CreateBroadcastGameRequest
	23, // 14: game_service.GameEventService.SendGameEvent:input_type -> ipc.ClientGameplayEvent
	11, // 15: game_service.GameEventService.SendTimePenaltyEvent:input_type -> game_service.TimePenaltyEvent
	12, // 16: game_service.GameEventService.SendChallengeBonusEvent:input_type -> game_service.ChallengeBonusPointsEvent
	15, // 17: game_service.GameEventService.SetBroadcastGamePrivacy:input_type -> game_service.BroadcastGamePrivacy
	24, // 18: game_service.GameMetadataService.GetMetadata:output_type -> ipc.GameInfoResponse
	4,  // 19: game_service.GameMetadataService.GetGCG:output_type -> game_service.GCGResponse
	5,  // 20: game_service.GameMetadataService.GetGameHistory:output_type -> game_service.GameHistoryResponse
	25, // 21: game_service.GameMetadataService.GetRecentGames:output_type -> ipc.GameInfoResponses
	8,  // 22: game_service.GameMetadataService.GetRematchStreak:output_type -> game_service.StreakInfoResponse
	6,  // 23: game_service.GameMetadataService.GetGameDocument:output_type -> game_service.GameDocumentResponse
	14, // 24: game_service.GameEventService.CreateBroadcastGame:output_type -> game_service.CreateBroadcastGameResponse
	10, // 25: game_service.GameEventService.SendGameEvent:output_type -> game_service.GameEventResponse
	10, // 26: game_service.GameEventService.SendTimePenaltyEvent:output_type -> game_service.GameEventResponse
	10, // 27: game_service.GameEventService.SendChallengeBonusEvent:output_type -> game_service.GameEventResponse
	10, // 28: game_service.GameEventService.SetBroadcastGamePrivacy:output_type -> game_service.GameEventResponse
	18, // [18:29] is the sub-list for method output_type
	7,  // [7:18] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_game_service_game_service_proto_init() }
func file_game_service_game_service_proto_init() {
	if File_game_service_game_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_service_game_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCGRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCGResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecentGamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreakInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RematchStreakRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimePenaltyEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeBonusPointsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBroadcastGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBroadcastGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastGamePrivacy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreakInfoResponse_SingleGameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreakInfoResponse_PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_service_game_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBroadcastGameRequest_PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_service_game_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_game_service_game_service_proto_goTypes,
		DependencyIndexes: file_game_service_game_service_proto_depIdxs,
		MessageInfos:      file_game_service_game_service_proto_msgTypes,
	}.Build()
	File_game_service_game_service_proto = out.File
	file_game_service_game_service_proto_rawDesc = nil
	file_game_service_game_service_proto_goTypes = nil
	file_game_service_game_service_proto_depIdxs = nil
}
